import streamlit as st
import google.generativeai as genai

# C·∫•u h√¨nh trang
st.set_page_config(
    page_title="Chat v·ªõi Gemini",
    page_icon="üí¨",
    layout="wide"
)

# H√†m hi·ªÉn th·ªã tin nh·∫Øn
def display_message(role, content):
    with st.chat_message(role):
        st.markdown(content)

# Ti√™u ƒë·ªÅ
st.title("üí¨ Gemini Chat Demo c·ªßa S∆°n")
st.markdown("·ª®ng d·ª•ng demo t∆∞∆°ng t√°c v·ªõi API Gemini (Google)")

# Sidebar
with st.sidebar:
    st.header("C·∫•u h√¨nh")
    api_key = st.text_input("Google Gemini API Key", type="password")
    
    st.markdown("---")
    st.markdown("### Th√¥ng tin")
    st.markdown("""
    - Mi·ªÖn ph√≠ v·ªõi Google Gemini API
    - D√πng m√¥ h√¨nh Gemini 1.5 ho·∫∑c 1.0
    """)
    if st.button("X√≥a l·ªãch s·ª≠ chat"):
        st.session_state.messages = []

# Kh·ªüi t·∫°o l·ªãch s·ª≠ chat
if "messages" not in st.session_state:
    st.session_state.messages = []

# Hi·ªÉn th·ªã l·ªãch s·ª≠
for message in st.session_state.messages:
    display_message(message["role"], message["content"])

# Nh·∫≠p prompt
if prompt := st.chat_input("Nh·∫≠p tin nh·∫Øn..."):
    if not api_key:
        st.error("Vui l√≤ng nh·∫≠p Google API Key!")
        st.stop()

    # Th√™m tin nh·∫Øn ng∆∞·ªùi d√πng
    st.session_state.messages.append({"role": "user", "content": prompt})
    display_message("user", prompt)

    # C·∫•u h√¨nh Gemini API
    genai.configure(api_key=api_key)
    model = genai.GenerativeModel("gemini-1.5-flash")

    with st.spinner("ƒêang suy nghƒ©..."):
        try:
            # G·ª≠i prompt tr·ª±c ti·∫øp ƒë·∫øn model (kh√¥ng d√πng chat history)
            response = model.generate_content(prompt)
            reply = response.text

            # L∆∞u l·∫°i c√¢u tr·∫£ l·ªùi
            st.session_state.messages.append({"role": "assistant", "content": reply})
            display_message("assistant", reply)

        except Exception as e:
            st.error(f"L·ªói khi g·ªçi Gemini API: {e}")
